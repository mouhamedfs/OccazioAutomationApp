<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.2 (Python 3.11.4 on win32)" generated="20230717 11:53:36.018" rpa="false" schemaversion="3">
<suite id="s1" name="Parrallell" source="C:\Users\monsh\PycharmProjects\Occazio\Resources\Parrallell">
<suite id="s1-s1" name="App1" source="C:\Users\monsh\PycharmProjects\Occazio\Resources\Parrallell\App1.robot">
<test id="s1-s1-t1" name="Tests 123" line="28">
<kw name="Open Devices 1">
<kw name="Open Application" library="AppiumLibrary">
<arg>http://mouhamedfamarasa_rmROKy:icEUU7Qmtw7dh7dRsY4b@hub-cloud.browserstack.com/wd/hub</arg>
<arg>name=parallel_test</arg>
<arg>build=RobotFramework</arg>
<arg>platformName=Android</arg>
<arg>os_version=12.0</arg>
<arg>app=bs://a184dfcad99aa72e97a7144e92719192a8a2d953</arg>
<arg>deviceName=Google Pixel 6</arg>
<doc>Opens a new application to given Appium server.
Capabilities of appium server, Android and iOS,
Please check https://github.com/appium/appium/blob/master/docs/en/writing-running-appium/server-args.md
| *Option*            | *Man.* | *Description*     |
| remote_url          | Yes    | Appium server url |
| alias               | no     | alias             |
| strict_ssl          | No     | allows you to send commands to an invalid certificate host like a self-signed one. |</doc>
<status status="PASS" starttime="20230717 11:52:44.425" endtime="20230717 11:53:01.765"/>
</kw>
<status status="PASS" starttime="20230717 11:52:44.425" endtime="20230717 11:53:01.765"/>
</kw>
<kw name="Open Devices 2">
<kw name="Open Application" library="AppiumLibrary">
<arg>http://mouhamedfamarasa_rmROKy:icEUU7Qmtw7dh7dRsY4b@hub-cloud.browserstack.com/wd/hub</arg>
<arg>name=parallel_test</arg>
<arg>build=RobotFramework</arg>
<arg>platformName=Android</arg>
<arg>os_version=10.0</arg>
<arg>app=bs://a184dfcad99aa72e97a7144e92719192a8a2d953</arg>
<arg>deviceName=Google Pixel 4</arg>
<doc>Opens a new application to given Appium server.
Capabilities of appium server, Android and iOS,
Please check https://github.com/appium/appium/blob/master/docs/en/writing-running-appium/server-args.md
| *Option*            | *Man.* | *Description*     |
| remote_url          | Yes    | Appium server url |
| alias               | no     | alias             |
| strict_ssl          | No     | allows you to send commands to an invalid certificate host like a self-signed one. |</doc>
<status status="PASS" starttime="20230717 11:53:01.766" endtime="20230717 11:53:18.861"/>
</kw>
<status status="PASS" starttime="20230717 11:53:01.766" endtime="20230717 11:53:18.861"/>
</kw>
<kw name="Unboarding" library="Navigate">
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<arg>id=bt_start_showcase</arg>
<arg>15s</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<msg timestamp="20230717 11:53:21.871" level="INFO">criteria is bt_start_showcase
criteria is bt_start_showcase
criteria is bt_start_showcase
criteria is bt_start_showcase
criteria is bt_start_showcase</msg>
<status status="PASS" starttime="20230717 11:53:18.861" endtime="20230717 11:53:21.871"/>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<arg>id=bt_start_showcase</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20230717 11:53:21.874" level="INFO">Clicking element 'id=bt_start_showcase'.</msg>
<msg timestamp="20230717 11:53:22.498" level="INFO">criteria is bt_start_showcase</msg>
<status status="PASS" starttime="20230717 11:53:21.871" endtime="20230717 11:53:22.498"/>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<arg>id=indicator_showcase</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<msg timestamp="20230717 11:53:23.376" level="INFO">criteria is indicator_showcase</msg>
<status status="PASS" starttime="20230717 11:53:22.498" endtime="20230717 11:53:23.376"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${buttons}</var>
<arg>Page Should Not Contain Element</arg>
<arg>id=bt_stop_showcase</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Page Should Not Contain Element" library="AppiumLibrary">
<arg>id=bt_stop_showcase</arg>
<doc>Verifies that current page not contains `locator` element.</doc>
<msg timestamp="20230717 11:53:23.619" level="INFO">Current page not contains element 'id=bt_stop_showcase'.</msg>
<msg timestamp="20230717 11:53:23.619" level="INFO">criteria is bt_stop_showcase</msg>
<status status="PASS" starttime="20230717 11:53:23.376" endtime="20230717 11:53:23.619"/>
</kw>
<msg timestamp="20230717 11:53:23.619" level="INFO">${buttons} = True</msg>
<status status="PASS" starttime="20230717 11:53:23.376" endtime="20230717 11:53:23.619"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>4</value>
<iter>
<var name="${index}">0</var>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${buttons}</arg>
<arg>Swipe By Percent</arg>
<arg>90</arg>
<arg>50</arg>
<arg>10</arg>
<arg>50</arg>
<arg>200</arg>
<arg>ELSE</arg>
<arg>Exit For Loop</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Swipe By Percent" library="AppiumLibrary">
<arg>90</arg>
<arg>50</arg>
<arg>10</arg>
<arg>50</arg>
<arg>200</arg>
<doc>Swipe from one percent of the screen to another percent, for an optional duration.
Normal swipe fails to scale for different screen resolutions, this can be avoided using percent.</doc>
<status status="PASS" starttime="20230717 11:53:23.619" endtime="20230717 11:53:25.359"/>
</kw>
<status status="PASS" starttime="20230717 11:53:23.619" endtime="20230717 11:53:25.359"/>
</kw>
<status status="PASS" starttime="20230717 11:53:23.619" endtime="20230717 11:53:25.359"/>
</iter>
<iter>
<var name="${index}">1</var>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${buttons}</arg>
<arg>Swipe By Percent</arg>
<arg>90</arg>
<arg>50</arg>
<arg>10</arg>
<arg>50</arg>
<arg>200</arg>
<arg>ELSE</arg>
<arg>Exit For Loop</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Swipe By Percent" library="AppiumLibrary">
<arg>90</arg>
<arg>50</arg>
<arg>10</arg>
<arg>50</arg>
<arg>200</arg>
<doc>Swipe from one percent of the screen to another percent, for an optional duration.
Normal swipe fails to scale for different screen resolutions, this can be avoided using percent.</doc>
<status status="PASS" starttime="20230717 11:53:25.359" endtime="20230717 11:53:27.096"/>
</kw>
<status status="PASS" starttime="20230717 11:53:25.359" endtime="20230717 11:53:27.096"/>
</kw>
<status status="PASS" starttime="20230717 11:53:25.359" endtime="20230717 11:53:27.096"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${buttons}</arg>
<arg>Swipe By Percent</arg>
<arg>90</arg>
<arg>50</arg>
<arg>10</arg>
<arg>50</arg>
<arg>200</arg>
<arg>ELSE</arg>
<arg>Exit For Loop</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Swipe By Percent" library="AppiumLibrary">
<arg>90</arg>
<arg>50</arg>
<arg>10</arg>
<arg>50</arg>
<arg>200</arg>
<doc>Swipe from one percent of the screen to another percent, for an optional duration.
Normal swipe fails to scale for different screen resolutions, this can be avoided using percent.</doc>
<status status="PASS" starttime="20230717 11:53:27.097" endtime="20230717 11:53:28.731"/>
</kw>
<status status="PASS" starttime="20230717 11:53:27.097" endtime="20230717 11:53:28.731"/>
</kw>
<status status="PASS" starttime="20230717 11:53:27.096" endtime="20230717 11:53:28.731"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${buttons}</arg>
<arg>Swipe By Percent</arg>
<arg>90</arg>
<arg>50</arg>
<arg>10</arg>
<arg>50</arg>
<arg>200</arg>
<arg>ELSE</arg>
<arg>Exit For Loop</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Swipe By Percent" library="AppiumLibrary">
<arg>90</arg>
<arg>50</arg>
<arg>10</arg>
<arg>50</arg>
<arg>200</arg>
<doc>Swipe from one percent of the screen to another percent, for an optional duration.
Normal swipe fails to scale for different screen resolutions, this can be avoided using percent.</doc>
<status status="PASS" starttime="20230717 11:53:28.733" endtime="20230717 11:53:30.417"/>
</kw>
<status status="PASS" starttime="20230717 11:53:28.733" endtime="20230717 11:53:30.417"/>
</kw>
<status status="PASS" starttime="20230717 11:53:28.731" endtime="20230717 11:53:30.417"/>
</iter>
<status status="PASS" starttime="20230717 11:53:23.619" endtime="20230717 11:53:30.417"/>
</for>
<kw name="Click Element" library="AppiumLibrary">
<arg>id=v_seekbar_overlay</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20230717 11:53:30.419" level="INFO">Clicking element 'id=v_seekbar_overlay'.</msg>
<msg timestamp="20230717 11:53:32.223" level="INFO">criteria is v_seekbar_overlay</msg>
<status status="PASS" starttime="20230717 11:53:30.418" endtime="20230717 11:53:32.223"/>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<arg>id=bt_stop_showcase</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20230717 11:53:32.224" level="INFO">Clicking element 'id=bt_stop_showcase'.</msg>
<msg timestamp="20230717 11:53:32.819" level="INFO">criteria is bt_stop_showcase</msg>
<status status="PASS" starttime="20230717 11:53:32.223" endtime="20230717 11:53:32.819"/>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<arg>id=tv_why_user_title</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<msg timestamp="20230717 11:53:33.687" level="INFO">criteria is tv_why_user_title</msg>
<status status="PASS" starttime="20230717 11:53:32.820" endtime="20230717 11:53:33.687"/>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<arg>id=v_click_why_other</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<msg timestamp="20230717 11:53:34.262" level="INFO">criteria is v_click_why_other</msg>
<status status="PASS" starttime="20230717 11:53:33.687" endtime="20230717 11:53:34.262"/>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<arg>id=v_click_why_other</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20230717 11:53:34.265" level="INFO">Clicking element 'id=v_click_why_other'.</msg>
<msg timestamp="20230717 11:53:34.916" level="INFO">criteria is v_click_why_other</msg>
<status status="PASS" starttime="20230717 11:53:34.262" endtime="20230717 11:53:34.916"/>
</kw>
<status status="PASS" starttime="20230717 11:53:18.861" endtime="20230717 11:53:34.916"/>
</kw>
<kw name="Close Application" library="AppiumLibrary">
<doc>Closes the current application and also close webdriver session.</doc>
<status status="PASS" starttime="20230717 11:53:34.917" endtime="20230717 11:53:35.674"/>
</kw>
<status status="PASS" starttime="20230717 11:52:44.425" endtime="20230717 11:53:35.674"/>
</test>
<status status="PASS" starttime="20230717 11:52:44.277" endtime="20230717 11:53:35.675"/>
</suite>
<doc>[https://pabot.org/?ref=log|Pabot] result from 1 executions.</doc>
<status status="PASS" starttime="20230717 11:52:44.265" endtime="20230717 11:53:35.681"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Parrallell">Parrallell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="App1">Parrallell.App1</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
